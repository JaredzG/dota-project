# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  scraper:
    image: jaredzg/dota-scraper
    build:
      context: ./dota-scraper
    environment:
      - DOTA_DB_HOST=postgres
      - DOTA_DB_USER=postgres
      - DOTA_DB_PASSWORD_FILE=/run/secrets/postgres-password
    volumes:
      - type: volume
        source: scraper-items
        target: /app/data
        volume:
          nocopy: true
      - type: bind
        source: ./dota-scraper
        target: /app
    ports:
      - 8000:5432
    secrets:
      - postgres-password
    depends_on:
      postgres:
        condition: service_healthy

  database:
    image: jaredzg/dota-database
    build:
      context: ./dota-database
    environment:
      - NODE_ENV=development
      - DOTA_DB_HOST=postgres
      - DOTA_DB_NAME=dota-database
      - DOTA_DB_USER=postgres
      - DOTA_DB_PASSWORD_FILE=/run/secrets/postgres-password
    volumes:
      - type: volume
        source: scraper-items
        target: /app/data
        volume:
          nocopy: true
      - type: bind
        source: ./dota-database
        target: /app
    ports:
      - 8001:5432
    secrets:
      - postgres-password
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: jaredzg/dota-frontend
    build:
      context: ./dota-frontend
    ports:
      - 8003:8003
    volumes:
      - type: bind
        source: ./dota-frontend
        target: /app

  backend:
    image: jaredzg/dota-backend
    build:
      context: ./dota-backend
    environment:
      - NODE_ENV=development
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8004
    ports:
      - 8004:8004
    volumes:
      - type: bind
        source: ./dota-backend
        target: /app

  postgres:
    image: postgres
    restart: always
    user: postgres
    environment:
      - POSTGRES_DB=dota-database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    secrets:
      - postgres-password
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin@email.com
      - PGADMIN_DEFAULT_PASSWORD_FILE=/run/secrets/pgadmin-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 8002:80
    secrets:
      - pgadmin-password
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  scraper-items:
  postgres-data:
  pgadmin-data:

secrets:
  postgres-password:
    file: ./secrets/postgres.password.txt
  pgadmin-password:
    file: ./secrets/pgadmin.password.txt
